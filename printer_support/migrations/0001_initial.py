# Generated by Django 3.1.7 on 2021-03-31 10:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
import phonenumber_field.modelfields
import printer_support.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('middle_name', models.CharField(blank=True, max_length=20)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('is_client', models.BooleanField(default=False)),
                ('is_rep', models.BooleanField(default=False)),
                ('rating_avg', models.IntegerField(default=0)),
                ('user_rating', models.IntegerField(default=0)),
                ('password', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', printer_support.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=30, unique=True)),
                ('address', models.CharField(max_length=50)),
                ('requested_by', models.CharField(blank=True, max_length=50, null=True)),
                ('approved_by', models.CharField(blank=True, max_length=50, null=True)),
                ('action_status', models.CharField(default='Approved', max_length=20)),
                ('rep', models.CharField(blank=True, max_length=50, null=True)),
                ('rep_tel', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('requested_by', models.CharField(blank=True, max_length=50, null=True)),
                ('approved_by', models.CharField(blank=True, max_length=50, null=True)),
                ('action_status', models.CharField(default='Approved', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Waybill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.CharField(max_length=50)),
                ('filename', models.CharField(max_length=10, unique=True)),
                ('type', models.CharField(max_length=20)),
                ('file', models.FileField(blank=True, null=True, upload_to='waybills')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('printer_number', models.CharField(max_length=6)),
                ('box_number', models.CharField(blank=True, max_length=20, null=True)),
                ('pickup_parts', multiselectfield.db.fields.MultiSelectField(choices=[('n', 'None'), ('k', 'Key'), ('a', 'Adapter'), ('u', 'USB'), ('r', 'Ribbon Sleeve'), ('c', 'Cartridge Holder')], max_length=11)),
                ('pickup_date', models.DateField(help_text='format : YYYY-MM-DDY')),
                ('assigned_technicians', multiselectfield.db.fields.MultiSelectField(choices=[], max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cancelled', models.BooleanField(default=False)),
                ('cancellation_reason', models.TextField(blank=True, null=True)),
                ('date_cancelled', models.DateField(blank=True, null=True)),
                ('repair_status', models.CharField(choices=[('Pending', 'Pending'), ('Fixed', 'Fixed')], default='Pending', max_length=10)),
                ('date_repaired', models.DateField(blank=True, help_text='format : YYYY-MM-DD', null=True)),
                ('fixed_by', multiselectfield.db.fields.MultiSelectField(choices=[], max_length=200)),
                ('requested_by', models.CharField(blank=True, max_length=50, null=True)),
                ('approved_by', models.CharField(blank=True, max_length=50, null=True)),
                ('action_status', models.CharField(default='Approved', max_length=20)),
                ('problem', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('c', 'CNP'), ('h', 'Broken Head'), ('s', 'Sensor Malfunctioning'), ('b', 'Board Malfunctioning'), ('l', 'LCD'), ('e', 'Encoder Board'), ('r', 'Roller Malfunctioning'), ('d', 'Diagnosis')], max_length=15, null=True)),
                ('parts_replaced', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('h', 'Print Head'), ('s', 'Sensor'), ('b', 'Board'), ('r', 'Roller'), ('eb', 'Encoder Board'), ('l', 'LCD')], max_length=12, null=True)),
                ('old_head_barcode', models.CharField(blank=True, max_length=9, null=True)),
                ('new_head_barcode', models.CharField(blank=True, max_length=9, null=True)),
                ('delivery_status', models.CharField(choices=[('Pending', 'Pending'), ('Delivered', 'Delivered')], default='Pending', max_length=10)),
                ('date_delivered', models.DateField(blank=True, help_text='format : YYYY-MM-DD', null=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='printer_support.client')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_confirmed', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PrinterRMA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('printer_number', models.CharField(max_length=6)),
                ('brand', models.CharField(choices=[('CD 800', 'CD 800'), ('IDP', 'IDP'), ('Smart 5', 'Smart 5')], default='CD 800', max_length=30)),
                ('model', models.CharField(choices=[('CD 800', 'CD 800'), ('IDP', 'IDP'), ('Smart 5', 'Smart 5')], default='CD 800', max_length=30)),
                ('part_name', models.CharField(max_length=30)),
                ('faulty_part_barcode', models.CharField(max_length=20)),
                ('replaced_part_barcode', models.CharField(blank=True, max_length=20, null=True)),
                ('warranty_status', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Rejected', 'Rejected')], default='Pending', max_length=15)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PartStock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=60)),
                ('request', models.IntegerField(default=0)),
                ('topup', models.IntegerField(default=0)),
                ('action_status', models.CharField(default='Approved', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='printer_support.part')),
            ],
        ),
        migrations.CreateModel(
            name='PartEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=60)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceAgreement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='agreements')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=150)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
